#!/usr/bin/env bash
# start-dropbox: Start Dropbox once its home location is mounted.
#
# Effective November 2018, Dropbox on Linux will only sync on unencrypted ext4.

DROPBOX=${DROPBOX:-"$HOME"/doc/Dropbox}
PROG=start-dropbox

main() {
    # Start Dropbox once its home location is mounted.

    if file_exists "$HOME"/.dropbox-disabled; then
        stderr "Dropbox disabled. Exiting."
        return 3
    fi

    given dropbox

    stderr "Dropbox: $DROPBOX"

    if dropbox_files_exist; then
        stderr "Found files in Dropbox. Starting ..."
        dropbox_start
    fi

    stderr "Waiting for Dropbox mount point ..."
    while ! dropbox_is_mounted; do
        sleep 2
    done

    if ! dropbox_files_exist; then
        stderr "Abort. No files found in mounted Dropbox."
        return 1
    fi

    stderr "Starting ..."
    dropbox_start
}

dropbox_start() {
    # Start Dropbox.

    exec dropbox start
}

dropbox_files_exist() {
    # Check whether files exist at Dropbox home location.

    exists "$(find "$DROPBOX" -mindepth 1 -maxdepth 1)"
}

dropbox_is_mounted() {
    # Check whether Dropbox home location is mounted.

    mountpoint -q "$DROPBOX"
}

exists() {
    # Check whether argument is not empty, i.e. test whether a variable exists.
    #
    # Example:
    #
    #     exists "$VAR"

    [ _"$*" != _ ]
}

file_exists() {
    # Check whether file exists at given path.
    #
    # Example:
    #
    #     file_exists /tmp/foo

    [ -e "$1" ]
}

given() {
    # Check that the given commands exist.

    for command in "$@"; do
        if ! which "$command" > /dev/null; then
            if exists "$PROG"; then
                stderr "$PROG: cannot find required program: $command"
            else
                stderr "cannot find required program: $command"
            fi
            return 3
        fi
    done
}

stderr() {
    # Echo all arguments to stderr.
    #
    # Be sure to return/exit with an error code if applicable, after calling.

    echo "$@" >&2
}

main "$@"
