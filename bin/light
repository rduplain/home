#!/usr/bin/env bash
# Toggle light through Home Assistant.
#
# Long-Lived Access Token:
# https://developers.home-assistant.io/docs/auth_api#long-lived-access-token
#
# View all Home Assistant states:
#
#     curl -s -H "Authorization: Bearer $(< ~/.homeassistant)" \
#                "$(< ~/.homeassistant-url)"/api/states | jq | less
#
# For a simple usage example, with an entity called `light.kitchen`, call:
#
#     light kitchen toggle

set -e

PROG=light

usage() {
    echo "usage: $PROG LIGHT <on|off|toggle|brightness> [VALUE]" >&2
}


### Utilities ###

given() {
    # Check that the given commands exist.

    local command

    for command in "$@"; do
        if ! which "$command" > /dev/null 2>&1; then
            return 3
        fi
    done
}


### Command-Line Interface Subcommands ###

brightness() {
    # Print brightness to stdout, a value from 0 (off) to 255 (fully bright).

    local brightness data light

    light="$1"
    shift

    if [ $# -gt 0 ]; then
        brightness="$1"
        shift

        curl -X POST -s \
             -H "Authorization: Bearer $(< ~/.homeassistant)"     \
             -H "Content-Type: application/json"                  \
             -d "{\"entity_id\": \"light.$light\",
                  \"brightness\": \"$brightness\"}"               \
             "$(< ~/.homeassistant-url)"/api/services/light/turn_on
    else
        if ! given jq; then
            echo "$PROG: error: requires \`jq\` program" >&2
            return 3
        fi

        data=$(
            curl -X GET -s \
                 -H "Authorization: Bearer $(< ~/.homeassistant)"     \
                 -H "Accept: application/json"                        \
                 "$(< ~/.homeassistant-url)"/api/states/light."$light")

        brightness=$(echo "$data" | jq .attributes.brightness)

        if [ -z "$brightness" ] || [ "$brightness" = "null" ]; then
            if [ "$(echo "$data" | jq .state)" = '"off"' ]; then
                echo 0
            else
                echo "$PROG: error: $light brightness not available" >&2
                return 1
            fi
        else
            echo "$brightness"
        fi
    fi
}

power() {
    # Set light power state to one of "on", "off", or "toggle".

    local action brightness light setpoint state

    light="$1"
    state="$2"
    shift 2

    # Support toggling if brightness is already set.
    if [ "$state" = "toggle" ] && [ $# -gt 0 ]; then
        setpoint="$1"
        brightness=$(brightness "$light")
        if [ "$brightness" -ne "$setpoint" ]; then
            brightness "$light" "$setpoint"
            return
        fi
    fi

    case "$state" in
        on|off)
            action=turn_$state
            ;;
        toggle)
            action=$state
            ;;
    esac

    curl -X POST -s \
         -H "Authorization: Bearer $(< ~/.homeassistant)"       \
         -H "Content-Type: application/json"                    \
         -d "{\"entity_id\": \"light.$light\"}"                 \
         "$(< ~/.homeassistant-url)"/api/services/light/"$action"

    echo
}

main() {
    local cmd light

    if [ $# -ne 2 ]; then
        usage
    fi

    light="$1"
    cmd="$2"
    shift 2

    # Verify $HOME file with long-lived homeassistant token.
    if [ ! -e ~/.homeassistant ]; then
        echo "error: ~/.homeassistant token not found." >&2
        return 2
    fi

    # Verify $HOME file with URL of Home Assistant installation.
    if [ ! -e ~/.homeassistant-url ]; then
        echo "error: ~/.homeassistant-url base URL not found." >&2
        return 2
    fi

    case "$cmd" in
        on|off|toggle)
            power "$light" "$cmd" "$@"
            ;;
        brightness)
            brightness "$light" "$@"
            ;;
        *)
            usage
            return 2
    esac
}

main "$@"
