#!/usr/bin/env bash
# box: configure Unix host at user level.
#
# Require no `sudo` but assume system-level tools are in place.
# Assume that `.bootstrap.bash` has provided initial setup.

# Exit immediately if a command error or non-zero return occurs.
set -e

box="${BASH_SOURCE[0]}"
export BOX_HOME="$( cd -P "$(dirname "$box")"/.. && pwd )"

bin="$BOX_HOME"/bin
etc="$BOX_HOME"/etc
lib="$BOX_HOME"/lib
sbin="$BOX_HOME"/sbin

reqd="$bin"/reqd

source "$lib"/box.bash
source "$lib"/core.bash
source "$lib"/env.bash

export BOX_PRIVATE=home
export QWERTY_SH="$bin"/qwerty.sh

[[ -e "$etc"/env ]] && eval "$(sourceable "$etc"/env)"

main() {
    # Configure system.

    if [ ! -x "$reqd" ]; then
        echo "Uninitialized. Run \`~/.bootstrap.bash\`." >&2
        return 2
    fi

    echo "user-level '${BOX:-(unset)}' purpose \`box\` (\$BOX)"

    rev="$(home-head)"
    "$reqd" install update
    if [ "$rev" != "$(home-head)" ]; then
        echo 'Restarting `box` with update ...' >&2
        exec "$box"
    fi

    "$reqd" install qwerty.sh-rev
    "$reqd" install reqd-rev

    [[ -x "$bin"/rc.local ]] && "$bin"/rc.local

    # Note: Prefer /opt/setup/box to avoid .bashrc PATH finding /opt/box/bin.
    [[ -x /opt/setup/box/bin/box ]] && sudo /opt/setup/box/bin/box
    [[ -x "$sbin"/private ]] && "$reqd" install private
    [[ -x "$sbin"/user ]] && "$reqd" install user

    appliance
    if [ "$BOX"  = "appliance" ]; then return; fi
    standard
    if [ "$BOX" != "development" ] && [ "$BOX" != "full" ]; then return; fi
    development
    if [ "$BOX" != "full" ]; then return; fi
    full
}

appliance() {
    :
}

standard() {
    "$reqd" install \
            theme \
            fc-cache
}

development() {
    "$reqd" install emacs.d

    "$reqd" install \
            clojure \
            ocaml \
            go \
            haskell \
            haxelib \
            node-config \
            kotlin \
            pyenv \
            rbenv \
            rust \
            sbt

    "$reqd" install \
            circleci-cli \
            packer \
            terraform \
            vagrant-config
}

full() {
    :
}

main "$@"
